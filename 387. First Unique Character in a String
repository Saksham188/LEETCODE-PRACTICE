387. First Unique Character in a String
Easy

Given a string s, find the first non-repeating character in it and return its index. If it does not exist, return -1.

Example 1:
Input: s = "leetcode"
Output: 0

Example 2:
Input: s = "loveleetcode"
Output: 2

Example 3:
Input: s = "aabb"
Output: -1
 
Constraints:

1 <= s.length <= 105
s consists of only lowercase English letters.

###############################################
CODE:
###############################################

///Logic: Agar size 1 hai string ka toh direct 0 return krdo. Fir loop mein chalao and phele pos mein first occurence ka index store krlo us element ka 
and fir dobara check kro ki us index ke aage khi match hora kya agar ni hora toh vo index return krdo. 
************************************************

class Solution {
public:
    int firstUniqChar(string s) {
     
        if(s.size()==1)
            return 0;
        for(int i=0;i<s.size();i++)
        {
            int pos=s.find(s[i]);
            
            if(s.find(s[i],pos+1)==-1)
            {
                return i;
            }
        }
        return -1;
    }
};
