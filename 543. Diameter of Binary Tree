543. Diameter of Binary Tree
Easy


Given the root of a binary tree, return the length of the diameter of the tree.
The diameter of a binary tree is the length of the longest path between any two nodes in a tree. This path may or may not pass through the root.
The length of a path between two nodes is represented by the number of edges between them.

Example 1:

              1
             / \                        
            2   3
           /\    
          4  5
          
Input: root = [1,2,3,4,5]
Output: 3
Explanation: 3 is the length of the path [4,2,1,3] or [5,2,1,3].

Example 2:
Input: root = [1,2]
Output: 1
 

Constraints:

The number of nodes in the tree is in the range [1, 10^4].
-100 <= Node.val <= 100

##########################################
CODE:
##########################################

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int ans=0;
    int Height(TreeNode* root)
    {
        if(root==NULL)
            return 0;
        int LeftHeight=Height(root->left);
        int RightHeight=Height(root->right);
        
        ans=max(ans,LeftHeight+RightHeight);
        return 1+ max(LeftHeight,RightHeight);
    }
    
    int diameterOfBinaryTree(TreeNode* root) {
       Height(root);
        return ans;
    }
};
