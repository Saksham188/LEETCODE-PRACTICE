70. Climbing Stairs
Easy

You are climbing a staircase. It takes n steps to reach the top.
Each time you can either climb 1 or 2 steps. In how many distinct ways can you climb to the top?

Example 1:
Input: n = 2
Output: 2
Explanation: There are two ways to climb to the top.
1. 1 step + 1 step
2. 2 steps

Example 2:
Input: n = 3
Output: 3
Explanation: There are three ways to climb to the top.
1. 1 step + 1 step + 1 step
2. 1 step + 2 steps
3. 2 steps + 1 step
 

Constraints:

1 <= n <= 45

##############################################
CODE:
##############################################
//Its fibonacci series 1 2 3 5 8 13 ....

Using DP:

class Solution {
public:
    int climbStairs(int n) {
     
        vector<int>val(45);
        
        for(int i=0;i<n;i++)
        {
            cout<<i<<" ";
            if(i<3)
               val[i]=i+1;
            else
                val[i]=val[i-1]+val[i-2];
        }
        
        return val[n-1];

        
    }
};
