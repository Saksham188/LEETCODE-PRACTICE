1207. Unique Number of Occurrences
Easy

1134

32

Add to List

Share
Given an array of integers arr, return true if the number of occurrences of each value in the array is unique, or false otherwise.

 

Example 1:

Input: arr = [1,2,2,1,1,3]
Output: true
Explanation: The value 1 has 3 occurrences, 2 has 2 and 3 has 1. No two values have the same number of occurrences.
Example 2:

Input: arr = [1,2]
Output: false
Example 3:

Input: arr = [-3,0,1,-3,1,1,1,-3,10,0]
Output: true
 

Constraints:

1 <= arr.length <= 1000
-1000 <= arr[i] <= 1000


#########################################
CODE
#########################################
Logic:
///first make a map for all value count and now insert the count in a set and as set dont contain duplicate ,
if size of set==size of map its only possible in case of no duplicates.
******************************************

class Solution {
public:
    bool uniqueOccurrences(vector<int>& arr) {
        map<int,int>mp;
        set<int>st;
        for(int i=0;i<arr.size();i++)
        {
            mp[arr[i]]++;
        }
       
        for(auto it:mp)
        {
           st.insert(it.second);
        }
        if(st.size()==mp.size())
            return true;
        return false;
    }
};


