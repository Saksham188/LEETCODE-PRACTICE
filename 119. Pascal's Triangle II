119. Pascal's Triangle II
Easy


Given an integer rowIndex, return the rowIndexth (0-indexed) row of the Pascal's triangle.
In Pascal's triangle, each number is the sum of the two numbers directly above it as shown:


 

Example 1:
Input: rowIndex = 3
Output: [1,3,3,1]

Example 2:
Input: rowIndex = 0
Output: [1]

Example 3:
Input: rowIndex = 1
Output: [1,1]
 

Constraints:

0 <= rowIndex <= 33
 

Follow up: Could you optimize your algorithm to use only O(rowIndex) extra space?


##################################
CODE:
##################################
class Solution {
public:
    vector<int> getRow(int rowIndex) {
    
        vector<int>CurRow{1},PrevRow{1}; 

        for(int i=1;i<=rowIndex;i++)
        {
            CurRow.push_back(1);
            
            for(int j=1;j<i;j++)
            {
                CurRow[j]=PrevRow[j]+PrevRow[j-1];
            }
            cout<<"Prev: ";
            for(auto it:PrevRow)
            {
                cout<<it<<" ";
            }
            cout<<endl<<"Cur: ";
            for(auto it:CurRow)
            {
                cout<<it<<" ";
            }
            cout<<endl;
            PrevRow=CurRow;
        }
        
        return CurRow;
    }
};
