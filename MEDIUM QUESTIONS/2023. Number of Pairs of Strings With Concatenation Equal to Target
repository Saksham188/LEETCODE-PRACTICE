2023. Number of Pairs of Strings With Concatenation Equal to Target
Medium

Given an array of digit strings nums and a digit string target, return the number of pairs of indices (i, j) (where i != j) such that the concatenation of
nums[i] + nums[j] equals target.
 
Example 1:
Input: nums = ["777","7","77","77"], target = "7777"
Output: 4
Explanation: Valid pairs are:
- (0, 1): "777" + "7"
- (1, 0): "7" + "777"
- (2, 3): "77" + "77"
- (3, 2): "77" + "77"

Example 2:
Input: nums = ["123","4","12","34"], target = "1234"
Output: 2
Explanation: Valid pairs are:
- (0, 1): "123" + "4"
- (2, 3): "12" + "34"

Example 3:
Input: nums = ["1","1","1"], target = "11"
Output: 6
Explanation: Valid pairs are:
- (0, 1): "1" + "1"
- (1, 0): "1" + "1"
- (0, 2): "1" + "1"
- (2, 0): "1" + "1"
- (1, 2): "1" + "1"
- (2, 1): "1" + "1"
 

Constraints:
2 <= nums.length <= 100
1 <= nums[i].length <= 100
2 <= target.length <= 100
nums[i] and target consist of digits.
nums[i] and target do not have leading zeros.

##################################################
CODE:
##################################################
///TC: O(N)
class Solution {
public:
    int numOfPairs(vector<string>& nums, string target) {
        
        int Ans=0;
        unordered_map<string,int>Mp;
        
        for(int i=0;i<nums.size();i++)
        {
           Mp[nums[i]]++;
        }
        
        for(int i=0;i<target.size();i++)
        {
            string s1=target.substr(0,i);   
            string s2=target.substr(i);   
            
            //If we have 3 one then total combination are n*n-1=3*2=6 ,7ones=7*6=42
            if(s1==s2)
                Ans+=Mp[s1]*(Mp[s2]-1);
            else
                Ans+=Mp[s1]*Mp[s2];  ///Isme seedha multiply krdo dono ki frequency ko
            
        }
        return Ans;
    }
};

***************************************
BRUTE FORCE:
TC:O(N^2)
***************************************
class Solution {
public:
    int numOfPairs(vector<string>& nums, string target) {
        
        int Ans=0;
        
        for(int i=0;i<nums.size();i++)
        {
            for(int j=0;j<nums.size();j++)
            {
                if(i!=j and nums[i]+nums[j]==target)
                {
                    cout<<i<<" "<<j<<endl;
                    Ans++;
                    
                }
            }
            
        }
        return Ans;
    }
};
