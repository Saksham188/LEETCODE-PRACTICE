1079. Letter Tile Possibilities
Medium

You have n  tiles, where each tile has one letter tiles[i] printed on it.
Return the number of possible non-empty sequences of letters you can make using the letters printed on those tiles.

Example 1:
Input: tiles = "AAB"
Output: 8
Explanation: The possible sequences are "A", "B", "AA", "AB", "BA", "AAB", "ABA", "BAA".

Example 2:
Input: tiles = "AAABBC"
Output: 188

Example 3:
Input: tiles = "V"
Output: 1
 
Constraints:
1 <= tiles.length <= 7
tiles consists of uppercase English letters.

#################################################
CODE:
#################################################
class Solution {
public:
      
    void FindAns(string &tiles,string &s,vector<bool>&Visited,unordered_set<string>&Ans)
    {
        for(int i=0;i<tiles.size();i++)
        {
            if(Visited[i]==false)
            {
                s+=tiles[i];
                Visited[i]=true;
                Ans.insert(s);
                FindAns(tiles,s,Visited,Ans);
                Visited[i]=false;  //Here did backtracking
                s.pop_back();
                
            }
        }
    }
    int numTilePossibilities(string tiles) {
        vector<bool>Visited(tiles.size());
        unordered_set<string>Ans;
        string s;
        
        FindAns(tiles,s,Visited,Ans);
        return Ans.size();
        
    }
};
