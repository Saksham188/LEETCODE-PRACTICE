1314. Matrix Block Sum
Medium


Given a m x n matrix mat and an integer k, return a matrix answer where each answer[i][j] is the sum of all elements mat[r][c] for:
i - k <= r <= i + k,
j - k <= c <= j + k, and
(r, c) is a valid position in the matrix.

Example 1:
Input: mat = [[1,2,3],[4,5,6],[7,8,9]], k = 1
Output: [[12,21,16],[27,45,33],[24,39,28]]

Example 2:
Input: mat = [[1,2,3],[4,5,6],[7,8,9]], k = 2
Output: [[45,45,45],[45,45,45],[45,45,45]]
 
Constraints:
m == mat.length
n == mat[i].length
1 <= m, n, k <= 100
1 <= mat[i][j] <= 100

#####################################
CODE:
#####################################
class Solution {
public:
   //Prefix
    
    vector<vector<int>> matrixBlockSum(vector<vector<int>>& mat, int k) {
        int m=mat.size(),n=mat[0].size();
        vector<vector<int> >Ans(m,vector<int>(n,0));
        
        //Calculate Prefix Sum:Calculated using formula mat[i][j]=mat[i-1][j]+mat[i][j-1]-mat[i-1][j-1]
    
        for(int i=0;i<m;i++)
        {
            for(int j=0;j<n;j++)
            {
                if(i>0)
                    mat[i][j]+=mat[i-1][j];
                if(j>0)
                    mat[i][j]+=mat[i][j-1];
                if(i>0 and j>0)
                    mat[i][j]-=mat[i-1][j-1];
            }
        }
        
        //Calculate matrix block sum.
       for(int i=0;i<m;i++)
        {
            for(int j=0;j<n;j++)
            {
              int rowstart=max(0,i-k),colstart=max(0,j-k),rowend=min(m-1,i+k) ,colend=min(n-1,j+k);
                
                Ans[i][j]=mat[rowend][colend];
                if(rowstart>0) 
                    Ans[i][j] -= mat[rowstart-1][colend];
                if(colstart>0) 
                    Ans[i][j] -= mat[rowend][colstart-1];
                if(rowstart>0 && colstart>0) 
                    Ans[i][j] += mat[rowstart-1][colstart-1];
            }
        }
        
        return Ans;
    }
};
