792. Number of Matching Subsequences
Medium

4361

182

Add to List

Share
Given a string s and an array of strings words, return the number of words[i] that is a subsequence of s.

A subsequence of a string is a new string generated from the original string with some characters (can be none) deleted without changing the relative order of the remaining characters.

For example, "ace" is a subsequence of "abcde".
 

Example 1:

Input: s = "abcde", words = ["a","bb","acd","ace"]
Output: 3
Explanation: There are three strings in words that are a subsequence of s: "a", "acd", "ace".
Example 2:

Input: s = "dsahjpjauf", words = ["ahjpjau","ja","ahbwzgqnuk","tnmlanowax"]
Output: 2
 

Constraints:

1 <= s.length <= 5 * 104
1 <= words.length <= 5000
1 <= words[i].length <= 50
s and words[i] consist of only lowercase English letters.

##########################################
CODE:
###########################################
class Solution {
public:
    //Here traverse the string s and then if word is found increase count. 
    bool FindStr(string s,string word)
    {
        int k=0;
        for(int i=0;i<word.size();i++)
        {
            if(s[k]==word[i])
                k++;
        if(k==s.size())
            return true;
        }
        return false;
    }
    
    int numMatchingSubseq(string s, vector<string>& words) {
        int Ans=0;
        //Here we make unordered map as it will reduce tle of repeated calculations
        unordered_map<string,int>Mp;
        
        for(int i=0;i<words.size();i++)
        {
            Mp[words[i]]++;
        }
        
        for(auto it:Mp)
        {
           if(FindStr(it.first,s))
              Ans+=it.second;
            
        }
                
        return Ans;
    }
};
