54. Spiral Matrix
Medium


Given an m x n matrix, return all elements of the matrix in spiral order.
Example 1:
Input: matrix = [[1,2,3],[4,5,6],[7,8,9]]
Output: [1,2,3,6,9,8,7,4,5]

Example 2:
Input: matrix = [[1,2,3,4],[5,6,7,8],[9,10,11,12]]
Output: [1,2,3,4,8,12,11,10,9,5,6,7]
 
Constraints:
m == matrix.length
n == matrix[i].length
1 <= m, n <= 10
-100 <= matrix[i][j] <= 100

###########################################
CODE:
###########################################
class Solution {
public:
    vector<int> spiralOrder(vector<vector<int>>& matrix) {
        vector<int>Ans(matrix.size()*matrix[0].size());
        
        int k=0,minrow=0,mincol=0,maxrow=matrix.size()-1,maxcol=matrix[0].size()-1;
        int sizi=matrix.size()*matrix[0].size();
        
        while(k!=sizi)
        {
            for(int j=mincol;j<=maxcol and k!=sizi;j++)
            {
                int i=minrow;
                Ans[k++]=matrix[i][j];
            }
            minrow++;
            
            for(int i=minrow;i<=maxrow and k!=sizi;i++)
            {
                int j=maxcol;
                Ans[k++]=matrix[i][j];

            }
            maxcol--;
            
            for(int j=maxcol;j>=mincol and k!=sizi;j--)
            {
                int i=maxrow;
                Ans[k++]=matrix[i][j];
            }
            maxrow--;
            
            for(int i=maxrow;i>=minrow and k!=sizi;i--)
            {
                int j=mincol;
                Ans[k++]=matrix[i][j];
            }
            mincol++;
        }
        return Ans;
    
    }
};
