713. Subarray Product Less Than K
Medium

Given an array of integers nums and an integer k, return the number of contiguous subarrays where the product of all the elements in the subarray is strictly less than k.
 
Example 1:

Input: nums = [10,5,2,6], k = 100
Output: 8
Explanation: The 8 subarrays that have product less than 100 are:
[10], [5], [2], [6], [10, 5], [5, 2], [2, 6], [5, 2, 6]
Note that [10, 5, 2] is not included as the product of 100 is not strictly less than k.

Example 2:
Input: nums = [1,2,3], k = 0
Output: 0
 

Constraints:

1 <= nums.length <= 3 * 10^4
1 <= nums[i] <= 1000
0 <= k <= 10^6

********************************************
CODE:
********************************************
///Use Sliding window maximum. For more brief info read 6companies 30 days goldmansachs folder last problem.
class Solution {
public:
    int numSubarrayProductLessThanK(vector<int>& nums, int k) {
        int count=0,start=0,end=0;
        long long int ans=1;
        
        while(end<nums.size())
        {
            ans*=nums[end];
            
            while(start < nums.size() and ans>=k )
            {
                ans/=nums[start++];
            }
            
            if(ans<k)
              count+=end-start+1;  ///as our size of window will be our ans.
            
            end++;
        }
        return count;
        
    }
};






















