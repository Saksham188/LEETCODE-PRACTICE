2062. Count Vowel Substrings of a String
Easy

A substring is a contiguous (non-empty) sequence of characters within a string.
A vowel substring is a substring that only consists of vowels ('a', 'e', 'i', 'o', and 'u') and has all five vowels present in it.
Given a string word, return the number of vowel substrings in word.

Example 1:
Input: word = "aeiouu"
Output: 2
Explanation: The vowel substrings of word are as follows (underlined):
- "aeiouu"
- "aeiouu"

Example 2:
Input: word = "unicornarihan"
Output: 0
Explanation: Not all 5 vowels are present, so there are no vowel substrings.

Example 3:
Input: word = "cuaieuouac"
Output: 7
Explanation: The vowel substrings of word are as follows (underlined):
- "cuaieuouac"
- "cuaieuouac"
- "cuaieuouac"
- "cuaieuouac"
- "cuaieuouac"
- "cuaieuouac"
- "cuaieuouac"
 

Constraints:

1 <= word.length <= 100
word consists of lowercase English letters only.

##########################################
CODE:
##########################################

///Logic: Here for each letter take a unordered set and traverse from that letter till end and check if we get any consonant then break,
else push it in set and if size of set bcme 5 ie we get aeiou then increment the count.Similarly do for all other characters.


class Solution {
public:
    bool IsVowel(char ch)
    {
        if(ch=='a' ||ch=='e'||ch=='i' ||ch=='o'||ch=='u')
            return true;
        return false;
    }
    int countVowelSubstrings(string word) {
        
        int count=0;
        
        for(int i=0;i<word.length();i++)
        {
            unordered_set<char>s;
            for(int j=i;j<word.length();j++)
            {
               if(!IsVowel(word[j]))
                   break;
                
                s.insert(word[j]);
                
                if(s.size()==5)
                    count++;
            }
        }
        return count;
        
    }
};

