1287. Element Appearing More Than 25% In Sorted Array
Easy

Given an integer array sorted in non-decreasing order, there is exactly one integer in the array that occurs more than 25% of the time, return that integer.

Example 1:
Input: arr = [1,2,2,6,6,6,6,7,10]
Output: 6

Example 2:
Input: arr = [1,1]
Output: 1
 

Constraints:

1 <= arr.length <= 10^4
0 <= arr[i] <= 10^5

###############################
CODE:
###############################
TC:O(N) SC:O(N)

class Solution {
public:
    int findSpecialInteger(vector<int>& arr) {
        map<int,int>mp;
        
        for(int i=0;i<arr.size();i++)
        {
            mp[arr[i]]++;
        }
        for(auto it:mp)
            cout<<it.first<<" "<<it.second<<"\n";
        int fre=0,ans=0;
        
        for(auto it:mp)
        {
            if(it.second>fre)
            {
                ans=it.first;
                fre=it.second;
            }
        }
        
        return ans;
    }
};
