409. Longest Palindrome
Easy


Given a string s which consists of lowercase or uppercase letters, return the length of the longest palindrome that can be built with those letters.
Letters are case sensitive, for example, "Aa" is not considered a palindrome here.

 

Example 1:
Input: s = "abccccdd"
Output: 7
Explanation: One longest palindrome that can be built is "dccaccd", whose length is 7.

Example 2:
Input: s = "a"
Output: 1
Explanation: The longest palindrome that can be built is "a", whose length is 1.
 

Constraints:

1 <= s.length <= 2000
s consists of lowercase and/or uppercase English letters only.

#################################################
CODE:
##################################################
LOGIC:  for palindrome all even frequency chars can be taken,and for odd freq-1 can be taken and if atleast 1 odd is present then add 1 to ans as it will bcme center.

class Solution {
public:
    int longestPalindrome(string s) {
        map<char,int>Mp;
        
        for(int i=0;i<s.size();i++)
        {
            Mp[s[i]]++;
        }
        
        int ans=0,val=0;
        
        for(auto it:Mp)
        {
            if(it.second %2==0)
                ans+=it.second;
            else
            {
               ans+=it.second-1;
               val=1;
            }
        }
        
        if(val==1)
            ans+=1;
        
        return ans;
        
    }
};
