1560. Most Visited Sector in a Circular Track
Easy


Given an integer n and an integer array rounds. We have a circular track which consists of n sectors labeled from 1 to n. 
A marathon will be held on this track, the marathon consists of m rounds. The ith round starts at sector rounds[i - 1] and ends at sector rounds[i].
For example, round 1 starts at sector rounds[0] and ends at sector rounds[1]

Return an array of the most visited sectors sorted in ascending order.
Notice that you circulate the track in ascending order of sector numbers in the counter-clockwise direction (See the first example).

 

Example 1:
Input: n = 4, rounds = [1,3,1,2]
Output: [1,2]
Explanation: The marathon starts at sector 1. The order of the visited sectors is as follows:
1 --> 2 --> 3 (end of round 1) --> 4 --> 1 (end of round 2) --> 2 (end of round 3 and the marathon)
We can see that both sectors 1 and 2 are visited twice and they are the most visited sectors. Sectors 3 and 4 are visited only once.

Example 2: 
Input: n = 2, rounds = [2,1,2,1,2,1,2,1,2]
Output: [2]

Example 3:
Input: n = 7, rounds = [1,3,5,7]
Output: [1,2,3,4,5,6,7]
 

Constraints:
2 <= n <= 100
1 <= m <= 100
rounds.length == m + 1
1 <= rounds[i] <= n
rounds[i] != rounds[i + 1] for 0 <= i < m

########################################
CODE:
#########################################
TC: O(N) Explanation below.
class Solution {
public:
    vector<int> mostVisited(int n, vector<int>& rounds) {
       vector<int>Ans;
        
        if(rounds[0]<=rounds[rounds.size()-1])
        {
            for(int i=rounds[0];i<=rounds[rounds.size()-1];i++)
            {
                Ans.push_back(i);
            }
        }
        else
        {
            for(int i=1;i<=rounds[rounds.size()-1];i++)
            {
                Ans.push_back(i);
            }
            for(int i=rounds[0];i<=n;i++)
            {
                Ans.push_back(i);
            }
        }
        
        return Ans;
    }
  
};
 
*******************************************
EXPLANATION:
*******************************************
eg1: n=4 and  rounds=[3,1,2,1,2,1]
 3->4->1->2->3->4->1->2->3->4->1
 so here we see that all 1,2,3,4 are equally visited thrice.
 
 So in Ans we will have all items from 1 to end pos and start pos to n 
 so here 1 to endpos=1 to 1 ie [1]
 and startpos to n= 3 to 4= [1,3,4]
 
 eg2: n=4  ,rounds=[1,3,1,2]
 1->2->3->4->1->2
 so here we see that all the sectors bw start pos and end pos will be visited max times .
 so 1,2 will be our ans.
 
 so here from 1(first ele) to 2(last ele) will be our ans.
 
