812. Largest Triangle Area
Easy


Given an array of points on the X-Y plane points where points[i] = [xi, yi], return the area of the largest triangle that can be formed by any three different points.
Answers within 10-5 of the actual answer will be accepted.

Example 1:
Input: points = [[0,0],[0,1],[1,0],[0,2],[2,0]]
Output: 2.00000
Explanation: The five points are shown in the above figure. The red triangle is the largest.

Example 2:
Input: points = [[1,0],[0,0],[0,1]]
Output: 0.50000
 

Constraints:

3 <= points.length <= 50
-50 <= xi, yi <= 50
All the given points are unique.

#########################################
CODE:
#########################################

class Solution {
public:
    double largestTriangleArea(vector<vector<int>>& points) {
        double ans=0;
        
        for(int i=0;i<points.size();i++)
        {
            for(int j=i+1;j<points.size();j++)
            {
                for(int k=j+1;k<points.size();k++)
                {
                    double x1,x2,x3,y1,y2,y3,dist1,dist2,dist3,s,val;
                    x1=points[i][0];
                    y1=points[i][1];
                    x2=points[j][0];
                    y2=points[j][1];
                    x3=points[k][0];
                    y3=points[k][1];
                    
                    dist1=sqrt((x1-x2)*(x1-x2) +(y1-y2)*(y1-y2));
                    dist2=sqrt((x2-x3)*(x2-x3) +(y2-y3)*(y2-y3));
                    dist3=sqrt((x1-x3)*(x1-x3) +(y1-y3)*(y1-y3));
                    
                    s=(dist1+dist2+dist3)/2;
                    
                    val=sqrt(s*(s-dist1)*(s-dist2)*(s-dist3));
                    ans=max(ans,val);
                }
            }
            
        }
        
        return ans;
    }
};
