1925. Count Square Sum Triples
Easy

A square triple (a,b,c) is a triple where a, b, and c are integers and a^2 + b^2 = c^2.
Given an integer n, return the number of square triples such that 1 <= a, b, c <= n.

 
Example 1:
Input: n = 5
Output: 2
Explanation: The square triples are (3,4,5) and (4,3,5).

Example 2:
Input: n = 10
Output: 4
Explanation: The square triples are (3,4,5), (4,3,5), (6,8,10), and (8,6,10).
 
Constraints:

1 <= n <= 250

###########################################
CODE:
###########################################

METHOD 1:
TC:O(N^3)
************************
class Solution {
public:
    int countTriples(int n) {
        
        int count=0;
       for(int i=1;i<=n;i++)
       {
           for(int j=1;j<=n;j++)
           {
               for(int k=1;k<=n;k++)
               {
                    if(i*i +j*j==k*k)
                        count++;
               }
           }
           
       }
       return count;
    }
};

********************************

##############################
METHOD 2:  TC:O(N^2)
##############################
///Logic: Here first sqrt of i^2 + j^2  and if its not int.eg i=2,j=4 then temp=4.47 ie 4  , so now temp*temp=16 != i^2+j^2=4+16=20 this is condition we check here.


class Solution {
public:
    int countTriples(int n) {
        
        int count=0;
       for(int i=1;i<=n;i++)
       {
           for(int j=i+1;j<=n;j++)
           {
               int temp=sqrt(i*i  +j*j);
               if(temp*temp==i*i +j*j  and  temp<=n)
                   count+=2;
           }
           
       }
       return count;
    }
};









